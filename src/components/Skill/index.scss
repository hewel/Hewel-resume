@import '../../assets/styles/variables';

$easeOutCubic : cubic-bezier(0.215, 0.610, 0.355, 1.000);
$cardAnimationDuration: 800ms;
@mixin fadeIn() {
    $animation-name: unique-id();
    animation-name: $animation-name;
    animation-duration: $cardAnimationDuration;
    animation-timing-function: $easeOutCubic;
    @keyframes #{$animation-name} {
        0% {
            opacity: 0;
            transform: translate3d(0, 5rem, 0);
        }
        20% {
            opacity: 1;
        }
        100% {
            opacity: 1;
            transform: translate3d(0, 0, 0);
        }
    }
}
@mixin fadeOut() {
   $animation-name: unique-id();
   animation-name: $animation-name;
   animation-duration: $cardAnimationDuration - 600ms;
   animation-timing-function: $easeOutCubic;

   @keyframes #{$animation-name} {
       0% {
           opacity: 1;
           transform: translate3d(0, 0, 0);
       }

       80% {
           opacity: 0;
       }

       100% {
           opacity: 0;
           transform: translate3d(0, 5rem, 0);
       }
   }
}
.skill-card {
    display: flex;
    align-items: center;
    height: size-count(4, 3);
    width: $skill-box-width;
    margin: {
        bottom: 2.4rem;
        left: 2.4rem;
        right: 2.4rem;
    }
    opacity: 0;
    animation-fill-mode: both;
    &.scrolled {
        @include fadeIn();
    }
    .skill-icon {
        float: left;
        width: $icon-size;
        height: $icon-size;
        margin-right: 2.4rem;
        @include clearfix();
        svg.icon {
            width: $icon-size;
            height: $icon-size;
        }
    }
    .skill-title {
        font-size: 2.4rem;
        padding: 1.2rem 0;
    }
    .skill-desc {
        float: left;
        width: $skill-box-width - $icon-size - 2.4rem;
        @include clearfix();
    }
    .skill-exp {
        .exp-title {
            display: block;
            color: #607D8B;
            margin-bottom: .6rem;
            font-weight: 500;
            font-size: 1.4rem;
        }
        .exp-bar {
            display: flex;
            position: relative;
            width: $skill-box-width - $icon-size - 2.4rem;
            flex-direction: column;
            border-radius: .6rem;
            align-items: flex-end;
            justify-content: center;
            .progress-rail {
                position: absolute;
                width: 80%;
                height: 1.2rem;
                align-self: flex-start;
                background-color: #ECEFF1;
                border-radius: inherit;
                .progress-bar {
                    position: absolute;
                    width: 0;
                    height: 100%;
                    border-radius: inherit;
                    background-color: $base-font-color;
                }
            }
            @mixin grade($level) {
                $names: 'a', 'b', 'c', 'd', 'e';
                $colors: #b7eb8f, #87e8de, #91d5ff, #adc6ff, #d3adf7;
                $shadows: #95de64, #5cdbd3, #69c0ff, #85a5ff, #b37feb;
                $name: nth($names, $level);
                $color: nth($colors, $level);
                $shadow: nth($shadows, $level);
                &.grade-#{$name} {
                    .progress-bar {
                        // width: $level * 20%;
                        background-color: $color;
                        box-shadow: 0 2px 8px transparentize($shadow, 0.3);
                        animation-timing-function: $easeOutCubic;
                        animation-fill-mode: both;
                        animation-delay: $cardAnimationDuration;
                        &:nth-child(even) {
                            animation-delay: $cardAnimationDuration + 100ms;
                        }
                        &.scrolled {
                            @include pullLeft($level);
                        }
                    }
                    .exp-grade {
                        background-color: $color;
                        border-color: $color;
                        box-shadow: 0 2px 8px transparentize($shadow, 0.5);
                    }
                }
            }
            @mixin pullLeft($level) {
                $animation-name: unique-id();
                $duration: 200ms;
                animation-name: $animation-name;
                animation-duration: $duration * $level;
                @keyframes #{$animation-name} {
                    0% {
                        width: 0%
                    }
                    100% {
                        width: $level * 20%;
                    }
                }
            }
            @for $var from 1 to 6 {
                @include grade($var);
            }
        }
        .exp-grade {
            position: relative;
            background-color: #34495e;
            color: #fefefe;
            font-weight: 300;
            padding: .6rem .8rem;
            font-size: 1.2rem;
            border-radius: .6rem;
            border-color: #34495e;
            // &::before {
            //     content: '';
            //     position: absolute;
            //     border: .4rem solid transparent;
            //     border-right-color: inherit;
            //     top: 50%;
            //     left: -.8rem;
            //     -webkit-transform: translate3d(0, -50%, 0);
            //     transform: translate3d(0, -50%, 0);
            // }
        }
    }
}
